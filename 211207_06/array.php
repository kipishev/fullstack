<?php
/*--------------------------------- Массивы */
$numbers = [1, 2, 3, 4, 5]; // определение массива
echo $numbers[0]; // вывести значение элемента, индекс которого равен 0
echo $numbers[15]; // вывод будет равен NULL

echo '<pre>';
print_r($numbers);

// Чтобы вывести элементы массива в циклах WHILE или FOR, нам необходимо знать длину массива
$count = count($numbers);
echo $count . '<br>';

/* Зная длину массива мы теперь можем вывести все его элементы (последний элемент в массиве - это всегда
count() - 1) */
for ($i=0; $i < $count; $i++) {
    echo "$i $numbers[$i]<br>"; // выводим и индекс и итый элемент
}

/*--------------------------------- Специальная функция FOREACH  */
/* Не нужно указывать никакого условия, условием окончания цикла будет просто последний элемент,
т. е. нам не нужно знать длину массива */
echo '<hr>';
foreach ($numbers as $number) {
    echo "$number <br>";
}
// каждому эелементу массива соответствует ключ и значение
echo '<br>';
foreach ($numbers as $key => $value) {
    echo "$key: $value <br>";
}

// можно определить пустой массив и затем заполнить его значениями
$new_numbers = [];
for ($i = 0; $i < 10; $i++) {
    $new_numbers[] = $i + 1;
/* Конструкция для добавления вовой записи в массив - обращение к пустому элементу.
Новый элемент добавляется в конец массива. Ключи массива при этом создаются автоматически. */
}
// Можно добавить элемент массива явно указав его ключ, чтобы PHP его не создавал автоматически
/* Мы можем также добавить новый элемент в массив и если его не было, то он просто добавится,
если был, то заменится. */
$new_numbers[3] = 99;
$new_numbers[10] = 100;
$new_numbers[67] = 67 * 67; // числовые индексы могут идти не по порядку

echo '<pre>';
print_r($new_numbers);

// Пример не числового (ассоциативного) массива
echo '<br>';
$person = [
    'name' => 'Andrei',
    'age' => 36,
    'city' => 'Moscow',
    'language' => 'Russian'
];
$person['car'] = true;
$person['language'] = 'Russian, Italian, English';
echo '<pre>';
print_r($person);

// Значение элемента массива можно затереть, но ключ не куда не денется
// Чтобы удалить пару ключ - значение, можно использовать специальную функцию

$person['name'] = '';
echo '<pre>';
print_r($person);

unset($person['name']);
echo '<pre>';
print_r($person);