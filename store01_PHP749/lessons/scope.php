<?php
require_once 'funcs.php';
/*--------------------------------- Области видимости */
/* Все, что вне функции – это глобальная область видимости.
Все, что внутри функции – это можно назвать локальной областью видимости. */

function plusOne($a){
    $a = $a + 1;
    // Правильная запись будет:
    // return $a + 1;
}
/* Переменные, объявленные внутри функции, не видны за ее пределами.
Опять же, чтобы получить результат работы функции, его нужно поместить в return.
А обращение напрямую к переменной ничего не даст, кроме NULL */

$a = 10;
echo "$a<br>"; // вывод будет 10

plusOne($a);
// Правильная запись будет:
// $a = plusOne($a);
echo "$a<br>"; // вывод будет снова 10

/* Все из-за путаницы с одинаковым наименованием переменных внутри функциии в выводе, но если
посмотреть ниже, все станет немного яснее */

/* Рассмотрим неправильный вариант, который нужно знать и не делать.
Вариант, когда в локальной области видимости мы будем ссылаться на переменную из глобальной области*/

function wrongPlusOne() {
    global $a;
    $a = $a + 1;
}
wrongPlusOne();
echo "$a<br>";
/* В данном случае функция повлияла на глобальную переменную, но так делать не нужно.
Это потом сложно исправляется. */

dump($GLOBALS);
// Данный массив хранит все объявленные переменные

$GLOBALS['a'] = 999;
/* Данный вариант глобального изменения переменных более предпочтителен,
поскольку он более явно виден. Но все равно не рекомендуем. */




